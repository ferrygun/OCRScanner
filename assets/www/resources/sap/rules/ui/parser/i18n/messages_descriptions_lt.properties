# HRF res\messages_descriptions.properties
# 

# This file contains messages descriptions arranged in sections according to HRF APIs
# These descriptions are translated.
# Adding a new message requires also update of message.xsjslib file by the new ID

#############################
# common
#############################
# 10 - 999 - common messages

# YMSG: return from resource activation, in case of a resource does not exist in repository
10=I\u0161tekliaus aktyvinti negalima; i\u0161tekliaus n\u0117ra.
# YMSG: return from resource activation, in case of a resource suffix is not one of HRF resources
11=I\u0161tekliaus aktyvinti negalima; sufiksas \u201E{0}\u201C nepalaikomas.
# YMSG: return from resource activation, in case of a resource package does not exist in repository
12=I\u0161tekliaus aktyvinti negalima; paketo \u201E{0}\u201C n\u0117ra.
# YMSG: return from runtime plug in, in case of invalid attribute
13=I\u0161tekliaus aktyvinti negalima; atributo \u201E{0}\u201C n\u0117ra scchemoje.
# YMSG: return from  runtime plug in, in case of invalid attribute
14=I\u0161tekliaus aktyvinti negalima; tr\u016Bksta privalomo atributo reik\u0161m\u0117s \u201E{0}\u201C.
# YMSG: return from  runtime plug in, in case none of a predefined set of fields is specified
15=I\u0161tekliaus suaktyvinti negalima; tr\u016Bksta bent vieno i\u0161 pasirinktin\u0173 atribut\u0173 {0}
# YMSG: return from  runtime plug in, in case of invalid field (e.g vocabulary doesn't exist)
16=I\u0161tekliaus suaktyvinti negalima; atributo reik\u0161m\u0117 {0} negalioja
# YMSG: return from runtime plug in, in case of inconsistent fields combination(e.g. vocabulary and output names doesn't match)
17=I\u0161tekliaus suaktyvinti negalima; {0} ir {1} derinys neleistinas
# YMSG: return from  runtime plug in, in case of invalid resource id (e.g. package / file name is missing)
23=I\u0161tekliaus aktyvinti negalima; i\u0161tekliaus n\u0117ra
# YMSG: return from  runtime plug in, in case of error from REL validation
24=Klaida lauke {0}\: {1}
# YMSG: return from  REST service, in case of http request contains non supported method
25=Metodas nepavyko; metodas \#{0} nepalaikomas
# YMSG:  technical error from platform
26=\u012Evyko technin\u0117 klaida - {0}
# YMSG: return from resource activation, in case of a resource does not exist in repository
27=I\u0161tekliaus n\u0117ra.

# 100 - 200 - Authorization

# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
100=J\u016Bs neturite \u012Fgaliojim\u0173 atlikti \u0161\u012F veiksm\u0105.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
101=J\u016Bs neturite \u012Fgaliojim\u0173 atnaujinti taisykles.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
102=J\u016Bs neturite \u012Fgaliojim\u0173 naikinti taisykles.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
103=J\u016Bs neturite \u012Fgaliojim\u0173 kurti taisykles.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
104=J\u016Bs neturite \u012Fgaliojim\u0173 skaityti taisykles.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
105=J\u016Bs neturite \u012Fgaliojim\u0173 atnaujinti taisykl\u0117s tarnybas.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
106=J\u016Bs neturite \u012Fgaliojim\u0173 naikinti taisykl\u0117s tarnybas.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
107=J\u016Bs neturite \u012Fgaliojim\u0173 kurti taisykl\u0117s tarnybas.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
108=J\u016Bs neturite \u012Fgaliojim\u0173 skaityti taisykl\u0117s tarnybas.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
109=J\u016Bs neturite \u012Fgaliojim\u0173 paleisti taisykl\u0117s tarnybas.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
110=J\u016Bs neturite \u012Fgaliojim\u0173 atnaujinti \u017Eodynus.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
111=J\u016Bs neturite \u012Fgaliojim\u0173 naikinti \u017Eodynus.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
112=J\u016Bs neturite \u012Fgaliojim\u0173 kurti \u017Eodynus.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
113=J\u016Bs neturite \u012Fgaliojim\u0173 skaityti \u017Eodynus.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
114=J\u016Bs neturite \u012Fgaliojim\u0173 atnaujinti taisykli\u0173 \u0161ablonus.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
115=J\u016Bs neturite \u012Fgaliojim\u0173 naikinti taisykli\u0173 \u0161ablonus.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
116=J\u016Bs neturite \u012Fgaliojim\u0173 kurti taisykli\u0173 \u0161ablonus.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
117=J\u016Bs neturite \u012Fgaliojim\u0173 skaityti taisykli\u0173 \u0161ablonus.
# XMSG: return from Request Handler, in case of unassigned privilege to perform an action 
118=J\u016Bs neturite \u012Fgaliojim\u0173 kurti arba atnaujinti taisykl\u0117s tarnybas.
# XMSG: in case of technical user either does not exist or is not configured correctly
119=SAP HANA taisykli\u0173 sistemos techninio vartotojo n\u0117ra arba jis tinkamai nesukonfig\u016Bruotas. {0}

#############################
# API: Validate
#############################
# 1100 - 1199 - REL validation messages

# YMSG: return from REL, the beginning of any REL validation error - in case of a wrong statement 
1100=I\u0161rai\u0161kos klaida;
# YMSG: return from REL parser, in case of a wrong entry (syntax) and maximum 3 option are optional instead 
1101=Klaida i\u0161rai\u0161koje; \u012Fveskite {0} vietoj {1}
# YMSG: return from REL parser, in case of a wrong entry (syntax) and more than 3 option are optional instead  
1102=Klaida i\u0161rai\u0161koje; {0} yra neleistinas \u012Fra\u0161as
# YMSG: return from REL parser, in case of a wrong input
1103=Klaida i\u0161rai\u0161koje; pa\u0161alinkite {0}
# YMSG: return from REL model, in case of collection OM when single value in needed
1104=Klaida i\u0161rai\u0161koje; {0} yra reik\u0161mi\u0173 s\u0105ra\u0161as. I\u0161rai\u0161kos, kuri nurodo vien\u0105 reik\u0161m\u0119, keitimas.
# YMSG: return from REL model, in case of a wrong input
1105=Klaida i\u0161rai\u0161koje; \u012Fveskite galiojant\u012F operand\u0105 vietoj {0}
# YMSG: return from REL parser, in case of an incomplete expression
1106=Nebaigta i\u0161rai\u0161ka;
# YMSG: return from REL lexer, in case of missing token at EOF
1107=Klaida i\u0161rai\u0161koje; \u012Fveskite {0} i\u0161rai\u0161kos pabaigoje
# YMSG: return from REL lexer, in case of wrong token
1108=I\u0161rai\u0161kos klaida; vietoje \u201E{1}\u201C \u012Fveskite \u201E{0}\u201C
# YMSG: return from REL entity, in case of missing current
1109=I\u0161rai\u0161kos klaida; WHERE s\u0105lygoje tr\u016Bksta \u201Ecurrent\u201C
# YMSG: return from REL entity, in case of redundant 'current'
1110=I\u0161rai\u0161kos klaida; neteklinis \u201Ecurrent\u201C; pa\u0161alinkite vien\u0105 \u201Ecurrent\u201C
# YMSG: return from REL vocabulary utils, in case of invalid root object
1111=Neleistinas \u0161akninis objektas
# YMSG: return from REL vocabulary utils, in case of invalid association
1112=Neleistinas susiejimas
# YMSG: return from REL vocabulary utils, in case of invalid association or attribute
1113=Neleistinas susiejimas arba atributas
# YMSG: return from REL vocabulary utils, in case of root is simple attribute
1114=\u0160akninis negali b\u016Bti paprastas atributas
# YMSG: return from REL vocabulary utils, in case of attribute not found
1115=Nebaigtas kelias, atributas nerastas
# YMSG: return from REL entity, in case of using 'current' outside of 'where'
1116=I\u0161rai\u0161kos klaida; WHERE s\u0105lygoje negalima naudoti tik rakta\u017Eod\u012F \u201Ecurrent\u201C.
# YMSG: return from REL entity, in case of using 'current' incorrectly with arithmetic
1117=Klaida i\u0161rai\u0161koje; WHERE s\u0105lygoje raktinis \u017Eodis \u201Ecurrent\u201C turi b\u016Bti taikomas visiems operandams, esantiems vienoje lyginamojo operando pus\u0117je.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1118=I\u0161rai\u0161kos klaida. \u201E{0}\u201C n\u0117ra leistina s\u0105ra\u0161o \u201E{1}\u201C reik\u0161m\u0117.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1119=I\u0161rai\u0161kos klaida. Operatoriaus \u201E{0}\u201C negalima naudoti su reik\u0161mi\u0173 s\u0105ra\u0161o atributu (\u201E{1}\u201C).
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1120=I\u0161rai\u0161kos klaida. Rakta\u017Eodis \u201Evisi\u201C negali b\u016Bti po operando, kuriame yra rakta\u017Eodis \u201Edabartinis\u201C.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1121=I\u0161rai\u0161kos klaida. Rakta\u017Eod\u017Eio \u201Evisi\u201C negalima naudoti kelis kartus tame pa\u010Diame i\u0161ra\u0161e.
# YMSG: return from REL parser utils, in case of using 2 differemt root objects 
1122=I\u0161rai\u0161kos klaida. I\u0161rai\u0161koje yra daugiau nei vienas \u0161akninis duomen\u0173 objektas\: {0}, {1}.
# YMSG: return from REL parser, in case of a wrong entry (syntax date) 
1123=I\u0161rai\u0161kos klaida. \u012Eveskite {0} naudodami taikomosioso programos format\u0105 {1}, o ne {2}.
# YMSG: return from REL parser, in case of a wrong locale settings
1124={0} {1} nepalaikomas.
# YMSG: return from REL parser utils, in case of using value that doen't exist in external value list
1125=I\u0161rai\u0161kos klaida. Vietoj {0} \u012Fveskite leistin\u0105 reik\u0161m\u0119 i\u0161 reik\u0161mi\u0173 \u017Einyno.
# YMSG: return from REL parser, in case of a two options of wrong formats
1126=I\u0161rai\u0161kos {0} klaida. Nor\u0117dami \u012Fvesti {1}, naudokite format\u0105 {2}. Nor\u0117dami \u012Fvesti {3}, naudokite format\u0105 {4}.
# YMSG: return from REL parser, in case of string without single quotes
1127=I\u0161rai\u0161kos klaida; \u012Fveskite eilut\u0119 viengubose kabut\u0117se\: {0} vietoj {1}.
# 1200 - 1999 - validation messages

#############################
# API : resource CRUD
#############################
# 2100 - 2299 - vocabulary messages

# YMSG: return from vocabulary runtime plug in, in case of error in expression
2100=\u201E{0}\u201C - klaida analizuojant i\u0161rai\u0161k\u0105\: \u201E{1}\u201C, \u201E{2}\u201C
# YMSG: return from vocabulary runtime plug in, in case of error in rule
2101=\u201E{0}\u201C - klaida taisykl\u0117je\: \u201E{1}\u201C, \u201E{2}\u201C
# YMSG: return from vocabulary runtime plug in, in case the parameter type already exists
2102=\u201E{0}\u201C \: \u201E{1}\u201C, pavadinimas\: \u201E{2}\u201C jau yra
# YMSG: return from vocabulary runtime plug in, in case parameter name isn't valid
2103=\u201E{0}\u201C \: \u201E{1}\u201C, neleistinas pavadinimas\: \u201E{2}\u201C
# YMSG: return from vocabulary runtime plug in, in case one of action/output names aren't valid
2104=\u201E{0}\u201C neleistinas pavadinimas\: \u201E{1}\u201C
# YMSG: return from vocabulary runtime plug in, in case name already exists
2105=Pavadinimas \u201E{0}\u201C apibr\u0117\u017Etas daugiau nei vien\u0105 kart\u0105 \u201E{1}\u201C.
# YMSG : return from vocabulary runtime plug in, in case the output has no parameters
2106=I\u0161vestyje tr\u016Bksta parametr\u0173
# YMSG: return from vocabulary runtime plug in, in case one of the attributes has an invalid name
2107=Neleistinas atributo pavadinimas \u201E{0}\u201C
# YMSG: return from vocabulary runtime plug in, in case object name of declare more than once
2108='{0}'\: '{1}' jau yra.
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2109=Atributas jau yra\: objektas\= \u201E{0}\u201C atributas\= \u201E{1}\u201C
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2110=Atributas jau yra\: objektas\= \u201E{0}\u201C susiejimas\= \u201E{1}\u201C
# YMSG : return from vocabulary runtime plug in, in case the source table isn't exists
2111=Neleistina \u0161altinio lentel\u0117 \u201E{0}\u201C
# YMSG : return from vocabulary runtime plug in, in case of one the association is invalid
2112=Neleistinas susiejimas\=\u201E{0}\u201C + susiejimas\=\u201E{1}\u201C
# YMSG : return from vocabulary runtime plug in, in case of one the association's attributes are invalid
2113=Neleistinas atributas, skirtas susiejimui\=\u201E{0}\u201C atributas\=\u201E{1}\u201C
# YMSG: return from rule utils, in case of invalid vocabulary assignment
2114=\u017Dodynas \u201E{0}\u201C neleistinas
# YMSG: return from vocabulary runtime plug in, in case invalid alias content
2115=Neleistinas turinys pseudonime \u201E{0}\u201C. Prie\u017Eastis\: \u201E{1}\u201C
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2116=Neleistinas pseudonimo pavadinimas \u201E{0}\u201C. Pseudonimo pavadinime gali b\u016Bti tik raid\u0117s ir pabraukti simboliai, jis turi prasid\u0117ti raide ir negali tur\u0117ti \u017Eod\u017Eio i\u0161 taisykl\u0117s i\u0161rai\u0161kos kalbos.
# YMSG: return from vocabulary runtime plug in, in case alias name collide with an data object name
2117=Neleistinas pavadinimas pseudonimui \u201E{0}\u201C. Pseudonimas jau yra kaip duomen\u0173 objekto pavadinimas.
# YMSG: return from vocabulary runtime plug in, in case o alias dependency to itself
2118=Neleistinas turinys pseudonime \u201E{0}\u201C. Pseudonimo sprendimas baigsis neribotu ciklu.
# YMSG: return from vocabulary runtime plug in, when name already exists in another vocabulary in the DB. Example: In 'dataObjects', name 'player' already exists in 'aliases' vocabulary 'voca2'
2120=\u201E{0}\u201C\:  pavadinimas \u201E{1}\u201C jau yra \u201E{2}\u201C, \u017Eodyne \u201E{3}\u201C.
# YMSG: return from vocabulary runtime plug in, scope name can't be Public or Private
2121=Neleistinas apr\u0117pties pavadinimas. Apr\u0117pties pavadinimas negali b\u016Bti \u201EPublic\u201C arba \u201EPrivate\u201C.
# YMSG: return from vocabulary runtime plug in, embedded vocabulary can't be with scope Global
2122=Neleistinas apimties tipas. \u012Ed\u0117tasis \u017Eodynas negali b\u016Bti \u201EGlobal\u201C tipo.
# YMSG: Object does not exist
2125=Objekto \u201E{&0}\u201C n\u0117ra
# YMSG: return from vocabulary runtime plug in, in case of a wrong data object name 
2126=Neleistinas dataObject \u201E{0}\u201C pavadinimas. dataObject pavadinimas negali b\u016Bti esamas taisykl\u0117s \u0161ablono pavadinimas arba vienas i\u0161 \u0161i\u0173 \u017Eod\u017Ei\u0173 (skiriamos ma\u017Eosios ir did\u017Eiosios raid\u0117s)\: rule, ruleTemplate
# YMSG: return from vocabulary runtime plug in, in case of a wrong alias name
2127=Neleistinas pseudonimo pavadinimas \u201E{0}\u201C. Pseudonimo pavadinimas negali b\u016Bti esamas taisykl\u0117s \u0161ablono pavadinimas arba vienas i\u0161 \u0161i\u0173 \u017Eod\u017Ei\u0173 (skiriamos ma\u017Eosios ir did\u017Eiosios raid\u0117s)\: rule, ruleTemplate
# YMSG: return from vocabulary runtime plug in, in case invalid data object name
2128=Neleistinas dataObject \u201E{0}\u201C pavadinimas. dataObject pavadinime gali b\u016Bti tik raid\u0117s ir pabraukti simboliai, jis turi prasid\u0117ti raide ir negali tur\u0117ti \u017Eod\u017Eio i\u0161 taisykl\u0117s i\u0161rai\u0161kos kalbos.
# YMSG: return from vocabulary runtime plug in, in case of duplicate alias names
2129=Pseudonimas \u201E{0}\u201C jau naudojamas kaip pseudonimo pavadinimas.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2130=Pseudonimoe \u201E{0}\u201C esantis turinio parametras yra tu\u0161\u010Dias.
# YMSG: return from vocabulary runtime plug in, in case alias name exists as as an attribute name
2131=Pseudonimo pavadinimas \u201E{0}\u201C neleistinas. Pseudonimas jau yra kaip atributo pavadinimas.
# YMSG: return from vocabulary runtime plug in, in case alias name exists in other vocabulary with the same scope
2132=Pseudonimo pavadinimas \u201E{0}\u201C neleistinas. Pseudonimas jau naudojamas kaip objekto \u201E{1}\u201C atributas \u017Eodyne \u201E{2}\u201C.
# YMSG: return from vocabulary runtime plug in, in case alias name exists in objects rule or ruleTemplate
2133=Pseudonimo pavadinimas \u201E{0}\u201C neleistinas. Pavadinimas jau naudojamas objekte \u201E{1}\u201C.
# YMSG: return from vocabulary runtime plug in, in case attribute name already exists as alias in other vocabulary
2134=Neleistinas atributo pavadinimas \u201E{0}\u201C. Pavadinimas jau naudojamas kaip pseudonimas \u017Eodyne \u201E{1}\u201C.
# YMSG: return from vocabulary runtime plug in, in case vocabulary declares it depends on a vocabulary which doesn't exists
2135=\u017Dodynas nurodo priklausomyb\u0119 nuo \u017Eodyno \u201E{0}\u201C, kurio n\u0117ra.
# YMSG: return from vocabulary runtime plug in, in case implementor declare global vocabulary with dependencies
2136=Visuotinis \u017Eodynas negali tur\u0117ti priklausomybi\u0173 nuo kit\u0173 \u017Eodyn\u0173.
# YMSG: return from vocabulary runtime plug in, in case, in the same data object, there is association and attribute with the same name
2137=Duomen\u0173 objekte \u201E{0}\u201C pavadinimas \u201E{1}\u201C naudojamas asociacijoms ir atributams. Tas pats pavadinimas negali b\u016Bti naudojamas abiejoms ypatyb\u0117ms.
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2138=Neleistinas reik\u0161mi\u0173 s\u0105ra\u0161o \u201E{0}\u201C pavadinimas. Reik\u0161mi\u0161 s\u0105ra\u0161o pavadinime gali b\u016Bti tik raid\u0117s ir pabraukti simboliai, jis turi prasid\u0117ti raide ir negali tur\u0117ti \u017Eod\u017Eio i\u0161 taisykl\u0117s i\u0161rai\u0161kos kalbos.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2139=Reik\u0161mi\u0173 s\u0105ra\u0161o \u201E{0}\u201C turinys yra tu\u0161\u010Dias.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2140=Reik\u0161mi\u0173 s\u0105ra\u0161o \u201E{0}\u201C, apibr\u0117\u017Eto atribute \u201E{1}\u201C, duomen\u0173 objekte \u201E{2}\u201C, n\u0117ra.
# YMSG: return from vocabulary runtime plug in, in case parameter size isn't valid
2141='{'0} parametro '{'2}, esan\u010Dio '{'3}, dydis ({1}) netinkamas nurodytam duomen\u0173 tipui.
# YMSG: return from vocabulary - in case parameter content cannot be a collection 
2142=Netinkamas parametro apibr\u0117\u017Eimas veiksmui \u201E{0}\u201C, esan\u010Diam veiksmo parametre \u201E{1}\u201C. Kolekcijos tipo parametrai veiksmuose neleid\u017Eiami.                                                                                                                                                                   .




# 2300 - 2499 rule template messages

# YMSG: return from Rule Template runtime plug in, in case of rule template name starts with a number
2300=Negalima sukurti arba atnaujinti taisykl\u0117s \u0161ablono; taisykl\u0117s pavadinimas negali prasid\u0117ti skai\u010Diumi
# YMSG: return from Rule Template runtime plug in, in case of illegal change in rule template attributes
2301=Taisykl\u0117s \u0161ablono aktyvinime yra nesuderinamas keitimas;
# YMSG: return from Rule Template runtime plug in, in case of rule template update contains condition change
2302=Negalima sukurti arba atnaujinti taisykl\u0117s \u0161ablono; taisykl\u0117s \u0161ablono keisti negalima
# YMSG: return from Rule Template runtime plug in, in case of rule template contains invalid condition 
2303=Negalima sukurti arba atnaujinti taisykl\u0117s \u0161ablono; k\u016Brimas \u201E{0}\u201C neleistinas
# YMSG: return from Rule Template runtime plug in, in case of rule template deletion when there are rules assigned to the rule template  
2304=Negalima naikinti taisykl\u0117s \u0161ablono {0}. Tai yra \u0161io taisykli\u0173 \u0161ablono taisykl\u0117s;
# YMSG: return from Rule Template runtime plug in, in case of duplicate rule template name  
2305=Negalima sukurti taisykl\u0117s \u0161ablono; taisykl\u0117s \u0161ablonas \u201E{0}\u201C jau yra pakete \u201E{1}\u201C
# YMSG: return from Rule Template runtime plug in, in case that rule template name starts with a number  
2306=Taisykl\u0117s \u0161ablono pavadinimas - \u201E{0}\u201C. Jis negali prasid\u0117ti skai\u010Diumi;
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as data object  
2307=Negalima sukurti taisykl\u0117s \u0161ablono \u201E{0}\u201C. Taisykl\u0117s \u0161ablono pavadinimas jau naudojamas kaip duomen\u0173 objektas \u017Eodyne \u201E{1}\u201C.
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as alias
2308=Negalima sukurti taisykl\u0117s \u0161ablono \u201E{0}\u201C. Taisykl\u0117s \u0161ablono pavadinimas jau naudojamas kaip pseudonimas objektas \u017Eodyne \u201E{1}\u201C.


# 2500 - 2699 - rule messages

# YMSG: return from Rule runtime plug in, in case of resource contains additional attributes but not assigned to rule template   
2500=Taisykl\u0117s sukurti negalima; \u012Fvesti papildomi atributai, nors taisykl\u0117s n\u0117ra pagr\u012Fsta \u0161ablonu.
# YMSG: return from Rule runtime plug in, in case of rule template assignment change   
2501=Taisykl\u0117s atnaujinti negalima; suk\u016Brus taisykl\u0119, taisykl\u0117s \u0161ablono priskyrimo pakeisti negalima.
# YMSG: return from Rule runtime plug in, in case of vocabulary change  
2502=Taisykl\u0117s atnaujinti negalima; suk\u016Brus taisykl\u0119, \u017Eodyno priskyrimo pakeisti negalima.
# YMSG: return from Rule runtime plug in, in case of output change   
2503=Taisykl\u0117s atnaujinti negalima; suk\u016Brus taisykl\u0119, i\u0161vesties priskyrimo pakeisti negalima.
# YMSG: return from Rule runtime plug in, in case of rule contains additional attributes where assigned rule template does not contains additional attributes
2504=Negalima sukurti taisykl\u0117s; \u012Fvesti papildomi \u0161ablonai, kurie nepriklauso priskirtam taisykl\u0117s \u0161ablonui.
# YMSG: return from Rule runtime plug in, in case of execution context change
2505=Taisykl\u0117s atnaujinti negalima; suk\u016Brus taisykl\u0119, vykdymo konteksto priskyrimo pakeisti negalima.
# YMSG: return from Rule runtime plug in, in case of invalid rule template assignment
2506=Taisykl\u0117s \u0161ablonas \u201E{0}\u201C neleistinas;
# YMSG: return from Rule runtime plug in, in case of invalid status transition
2507=Taisykl\u0117s naujinti negalima; negalite keisti b\u016Bsenos \u201E{0}\u201C \u012F \u201E{1}\u201C.
# YMSG: return from Rule runtime plug in, in case of updating single consumption to non single consumption Rule
2510=\u012Ed\u0117t\u0173j\u0173 tarnyb\u0173 pa\u0161alinti neleid\u017Eiama.
# YMSG: return from Rule runtime plug in, in case of updating single embedded service in Rule
2511=\u012Ed\u0117t\u0173j\u0173 tarnyb\u0173 keisti arba pa\u0161alinti neleid\u017Eiama.
# YMSG: return from Rule runtime plug in, in case of more than one embedded services with the same name
2512=\u012Ed\u0117tosios tarnybos pavadinimas \u2013 \u201E{0}\u201C, naudojamas daugiau nei kart\u0105.
# YMSG: return from Rule runtime plug in - update/create, in case the rule body is not valid
2513=Negalima sukurti arba atnaujinti taisykl\u0117s; taisykl\u0117s tekstas neleistinas.
# YMSG: return from Rule body validator - in case parameter is referenced to an unknown action
2514=Neleistinas parametro apibr\u0117\u017Eimas. Parametro nurododos \u012F veiksm\u0105 \u201E{0}\u201C n\u0117ra \u017Eodyne.
# YMSG: return from Rule body validator - in case parameter name isn't a valid parameter for action
2515=Neleistinas parametro apibr\u0117\u017Eimas. \u017Dodyne parametro pavadinimas \u201E{0}\u201C n\u0117ra skirtas veiksmui \u201E{1}\u201C.
# YMSG: return from Rule body validator - in case action doesn't exist in the vocabulary
2516=Veiksmo \u201E{0}\u201C n\u0117ra \u017Eodyne.
# YMSG: return from Rule body validator - when the sent parameter isn't a required parameter in the sent output 
2517=Neleistinas parametro apibr\u0117\u017Eimas. \u017Dodyne parametro pavadinimas \u201E{0}\u201C n\u0117ra skirtas i\u0161ves\u010Diai \u201E{1}\u201C.
# YMSG: return from Rule body validator - when the sent output doesn't exists in the vocabulary
2518=I\u0161vesties \u201E{0}\u201C n\u0117ra \u017Eodyne.
# YMSG: return from Rule body validator - when alias has more than one output parameter column
2519=Pseudonimas turi daugiau nei vien\u0105 i\u0161vesties parametr\u0105.
# YMSG: return from Rule body validator - when the alias output parameters values do not have the same type X
2520=Visos i\u0161vesties parametro \u201E{0}\u201C reik\u0161m\u0117s turi b\u016Bti to paties tipo.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that does not exist.
2521=Nepavyko priskirti taisykl\u0117s \u201E{0}\u201C taisykl\u0117s tarnybai \u201E{1}\u201C'. Taisykl\u0117s tarnybos n\u0117ra.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different vocabulary.
2522=Nepavyko priskirti taisykl\u0117s \u201E{0}\u201C taisykl\u0117s tarnybai \u201E{1}\u201C'. Taisykl\u0117s tarnybos ir taisykl\u0117s apibr\u0117\u017Eti \u017Eodynai turi sutapti.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different output.
2523=Nepavyko priskirti taisykl\u0117s \u201E{0}\u201C taisykl\u0117s tarnybai \u201E{1}\u201C'. Taisykl\u0117s tarnybos ir taisykl\u0117s apibr\u0117\u017Eta i\u0161vestis turi sutapti.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that is not indicated as manually assigned.
2524=Nepavyko priskirti taisykl\u0117s \u201E{0}\u201C taisykl\u0117s tarnybai \u201E{1}\u201C. Taisykl\u0117s tarnyba nustatoma naudojant automatinius taisykl\u0117s priskyrimus, tod\u0117l priskyrimai rankiniu b\u016Bdu neleid\u017Eiami.
# YMSG: return from Rule runtime plug in - update/create, in case a custom condition is not valid
2525=Taisykl\u0117s negalima kurti arba naujinti; \u201E{0}\u201C n\u0117ra leistina s\u0105lyga.
# YMSG: return from Rule body validator - when ruleBody of type ruleSet has more than one condition column
2526=Netinkamas taisykli\u0173 rinkinys. Taisykli\u0173 rinkinyje esanti taisykl\u0117 turi daugiau nei vien\u0105 s\u0105lyg\u0105.
# YMSG: return from Rule body validator - when ruleBody alias has parameter of type collection
2527=Netinkamas parametro turinys. Parametras \u201E{0}\u201C negali b\u016Bti kolekcija.
# YMSG: return from Rule body validator - when ruleBody expressions don't have the same root object
2528=Neleistina sprendim\u0173 lentel\u0117. Visos i\u0161rei\u0161kos sprendim\u0173 lentel\u0117je turi tur\u0117ti t\u0105 pat\u012F \u0161aknin\u012F objekt\u0105 '{0}'.
# XMSG: return from rule validation when not found match result data object between rule and rule service
2529=Rezultato duomen\u0173 objektas '{0}' taisykl\u0117je '{1}' neatitinka rezultato duomen\u0173 objekto '{2}' taisykl\u0117s paslaugoje '{3}'.
# XMSG: return from rule validation when the vocabulary section was not found.
2530=Patvirtinimo nepavyko baigti. \u201Evocabulary\u201C tr\u016Bksta \u201EOData\u201C naudingoje apkrovoje.
# 2700 - 2899 - rule service messages

# YMSG: return from Rule service plug in, in case of wrong data object filter
2700=Taisykl\u0117s tarnybos filtro klaida
# YMSG: return from Rule service plug in, in case of different data objects in execution context and filter
2701=Duomen\u0173 objektas \u201E{0}\u201C vykdymo kontekste skiriasi nuo dataObject \u201E{1}\u201C, esan\u010Dio filtre
# YMSG: return from  runtime plug in, in case of specified data object does not have the specified attribute (e.g. data object keys in rule service definition).
2704=Negalima sukurti arba atnaujinti taisykl\u0117s tanybos; duomen\u0173 objekte {0} i\u0161 \u017Eodyno {1} neturi atributo {2}
# YMSG: return from runtime plug in, in case of parameter mapping path contains a collection
2705=Kelias su rinkimu neleid\u017Eiamas. Kelias\: {0};
# YMSG: return from runtime plug in, in case of data object mapping entry is not unique within an execution context .
2706=duomen\u0173 objektas {0} turi pasikartojan\u010Dius susiejimus;
# YMSG: return from  runtime plug in, in case of parameter definition entry is not unique within an execution context .
2707=Taisykl\u0117s tarnybos k\u016Brimas negalimas; parametras {0} dubliuotas
# YMSG: return from  runtime plug in, in case of parameter mapping entry doesn't have a match parameter definition entry with in an execution context
2708=Negalima sukurti taisykl\u0117s tarnybos; parametro {0} n\u0117ra ir jis susietas su duomen\u0173 objektu
# YMSG: return from  runtime plug in, in case of ifentifiers in dataObject type parameter do not exist in data object from vocabulary
2709=Neleistinas parametro apibr\u0117\u017Eimas taisykl\u0117s tarnyboje \u201E{0}\u201C. Parametre \u201E{1}\u201C, \u201E{2}\u201C yrra neleistinas duomen\u0173 objekto \u201E{3}\u201C atributas \u017Eodyno apimtyje \u201E{4}\u201C.
# YMSG: return from runtime plug in, in case of data object definition entry is not unique within parameter definition if service.
2710=Neleistinas parametro apibr\u0117\u017Eimas taisykl\u0117s tarnyboje \u201E{0}\u201C. Duomen\u0173 objektas \u201E{1}\u201C yra susietas daugiau nei su vienu parametru.
# YMSG: return from runtime plug in, only read-only rule services can be indicated to be created with result view
2711=Nepavyko sukurti taisykl\u0117s tarnybos \u201E{0}\u201C. Taisykl\u0117s tarnyba su rezultat\u0173 rakursu turi b\u016Bti nurodyta kaip skirta tik skaityti.
# YMSG: return from runtime plug in, only explicit output rule services can be indicated to be created with result view
2712=Nepavyko sukurti taisykl\u0117s tarnybos \u201E{0}\u201C. Taisykl\u0117s tarnyba su rezultat\u0173 rakursu turi tur\u0117ti ai\u0161kiai apibr\u0117\u017Et\u0105 i\u0161vest\u012F.
# YMSG: returned from request handler. Rule requested to be removed from rule service but the rule is not assigned to it
2713=Nepavyko pa\u0161alinti taisykl\u0117s priskyrimo. Taisykl\u0117 \u201E{0}\u201C nepriskirta taisykl\u0117s tarnybai.
# YMSG: return from  runtime plug in, in case of output contains collection parameter in event mode scenario
2714=Nepavyko sukurti taisykl\u0117s tarnybos \u201E{0}\u201C. J\u016Bs negalite apibr\u0117\u017Eti i\u0161vesties naudodami kolekcijos tipo parametrus taisykl\u0117s tarnybai, kurios vykdymo kontekste n\u0117ra apibr\u0117\u017Eto duomen\u0173 objekto.
# XMSG: return from rule service validation when not found match of result data object between rule service and the vocabulary
2715=Rezultato duomen\u0173 objektas '{0}' taisykli\u0173 paslaugoje '{1}' neapibr\u0117\u017Etas kaip RESULT naudojimo tipas \u017Eodyne.
# XMSG: return from rule service validation when not found match of parameter between rule service and the vocabulary
2716=Parametras '{0}' \u017Eodyne '{1}' neapibr\u0117\u017Etas kaip taisykl\u0117s paslaugos '{3}' vykdymo konteksto parametras.


# 2900 - 2949 - post activation / completeActivation

# 2950 - 2999 - common resource CRUD


# YMSG: return from Request Handler, in case of url parameter that isn't valid
2955=URL parametras\: {0} neleistinas
# YMSG: return from Request Handler, in case of unsupported request mode
2956=Mre\u017Eimas \#{0} nepalaikomas
# YMSG: return from Request Handler, in case of unsupported metadata
2957=Metaduomenys nepalaikomi
# YMSG: return from Request Handler, in case of unsupported metadata for method
2958=Funkcija \u201EGauti metaduomenis\u201C galioja tik su u\u017Eklausos metodu GET


# YMSG: returned when wrong query is generated (during procedure generation). 2 causes: Bug in process or there is no mapping from vocabulary to real table / column
2970=Klaida generuojant u\u017Eklaus\u0105 arba neleistinas susiejimas
# YMSG: returned if for some reason the parser returned undefined parse model. Can be bad rule syntax or a bug
2971=Analiz\u0117s modelis neapibr\u0117\u017Etas
# YMSG: query generation needs either leading object and at least one key or a mapping to parameters. The error is returned if something is missing 
2972=Neleistina pagrindinio objekto, rakt\u0173 ir susiejimo derinys
# YMSG: returned when there is no association between 2 objects in vocabulary
2973=Neleistinas susiejimas \u2013 n\u0117ra atribut\u0173
# YMSG: returned when there is a use of attribute based on predictive model but the procedure for the predictive model is not defined
2974=Numatoma modulio proced\u016Bra {0} nerasta
# YMSG: outputs tanle type is mandatory. error when missing 
2975=Neleistini rezultat\u0173 duomenys
# YMSG: error when is out name is missing in vocabulary output names 
2976=Neleistinas i\u0161vesties pavadiniams
# YMSG: error when rule body type is different from text or decisionTable 
2977=neleistinas taisykl\u0117s teksto tipas
# YMSG: return from Runtime plugins, in case of unsupported change mode
2978=I\u0161teklius nepalaiko keitimo re\u017Eimo \u201E{0}\u201C
# YMSG: return from Runtime plugin - generate, for informing on the change mode for current resource
2979=I\u0161tekliaus generavimas, keitimo re\u017Eimas\: \u201E{0}\u201C
# YMSG: return when expression  
2980=Klaida analiz\u0117s i\u0161rai\u0161koje\: \u201E{0}\u201C
# YMSG: return when expression  
2981=Taisykl\u0117s \u0161ablono \u201E{0}\u201C k\u016Brimas negalimas. Pavadinim\u0105 jau naudoja vienas i\u0161 duomen\u0173 objekt\u0173 \u017Eodyne \u201E{1}\u201C.



#############################
# API: Get params
#############################

# 3100 - 3999 - get params messages

# YMSG: return from  ruleBodyAnalyzer, in case of businessRule.type is not text
3100=Verslo taisykl\u0117s tipas turi b\u016Bti tekstas
# YMSG: return from  ruleBodyAnalyzer, in case of Vocabulary is missing
3101=Tr\u016Bksta \u017Eodyno

#############################/
# API: Rule service consumption
#############################/
# 4100 - 4999 messages

# YMSG: return message in case the output is partial
4100=Rodoma element\u0173\: {0}. Atminkite, kad tai yra tik dalinis rezultat\u0173 rinkinys. Jei saveResult v\u0117liav\u0117l\u0117 nustatyta kaip TRUE, vis\u0105 rezultat\u0173 s\u0105ra\u0161\u0105 galima rasti '{'1}.output lentel\u0117je.

#############################/
# Halm and Installation
#############################/

# YMSG: Post Activation API success
10000=SAP HANA taisykli\u0173 sistemos konfig\u016Bracijos scenarijus s\u0117kmingai u\u017Ebaigtas.
# YMSG: Post Activation API failed
10001=Klaida SAP HANA taisykli\u0173 sistemos konfig\u016Bracijos scenarijuje. {0}
# YMSG: Post Activation API failed
10002=Aptikta SAP HANA taisykli\u0173 sistemos \u017Einiatinklio taikomosios programos esama konfig\u016Bracija. Tod\u0117l numatytosios \u017Einiatinklio taikomosios programos konfig\u016Bracijos nustatyti negalima.
# YMSG: Post Activation API failed
10003=SAP HANA taisykli\u0173 sistemos \u017Einiatinklio taikomosios programos konfig\u016Bracija nepavyko d\u0117l technin\u0117s klaidos. Prie\u017Eastis\: {0}
# YMSG: Post Activation API failed
10004=Taisykl\u0117s tarnyba arba taisykl\u0117 su \u012Fd\u0117t\u0105ja tarnyba sistemoje jau yra. Tod\u0117l laiko juostos atnaujinti neleid\u017Eiama.
# YMSG: Post Activation API failed
10005=Taisykl\u0117s tarnyba arba taisykl\u0117 su \u012Fd\u0117t\u0105ja tarnyba sistemoje jau yra. Tod\u0117l vykdymo laiko schemos atnaujinti neleid\u017Eiama.
